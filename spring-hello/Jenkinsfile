pipeline {
    agent any

    environment {
        IMAGE_NAME = 'springboot-ci-demo'
        CONTAINER_NAME = 'springboot-ci-demo-container'
        HOST_PORT = '9090'
        CONTAINER_PORT = '8080'
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build with Maven') {
            steps {
                dir('spring-hello') {
                    bat 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('spring-hello') {
                    bat "docker build -t %IMAGE_NAME% ."
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    bat "docker rm -f %CONTAINER_NAME% || exit 0"
                    bat "docker run -d --name %CONTAINER_NAME% -p %HOST_PORT%:%CONTAINER_PORT% %IMAGE_NAME%"
                    echo 'Waiting for app to start...'
                    sleep 15
                }
            }
        }

        stage('Install Node Modules for Playwright') {
            steps {
                dir('spring-hello') {
                    bat 'npm install'
                }
            }
        }

        stage('Run Playwright E2E Tests') {
            steps {
                dir('spring-hello/playwright-tests') {
                    bat 'npx playwright test'
                    bat 'npx playwright show-report --report-dir=playwright-report'
                }
            }
        }

        stage('Archive Playwright Report') {
            steps {
                dir('spring-hello/playwright-tests') {
                    archiveArtifacts artifacts: 'playwright-report/**', allowEmptyArchive: true
                }
            }
        }

    }

    post {
        always {
            script {
                bat "docker rm -f %CONTAINER_NAME% || exit 0"
            }
        }
    }
}
