pipeline {
    agent any

    environment {
        TEST_PORT = "8086"
        PROD_PORT = "9090"
    }

    stages {
        stage('Clone') {
            steps {
                git 'https://github.com/your-org/your-repo.git'
            }
        }

        stage('Build') {
            steps {
                dir('spring-hello') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Run Test Container') {
            steps {
                sh '''
                docker rm -f test-hello || true
                docker build -t hello-world-test -f spring-hello/Dockerfile spring-hello
                docker run -d --name test-hello -p ${TEST_PORT}:8086 hello-world-test
                sleep 10
                '''
            }
        }

        stage('Install Playwright & Test') {
            steps {
                dir('spring-hello/playwright-tests') {
                    sh '''
                    npm install -D @playwright/test
                    npx playwright install
                    npx playwright test
                    '''
                }
            }
        }

        stage('Stop Test Container') {
            steps {
                sh 'docker stop test-hello'
            }
        }

        stage('Deploy to Production') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                sh '''
                docker rm -f prod-hello || true
                docker build -t hello-world-prod -f spring-hello/Dockerfile spring-hello
                docker run -d --name prod-hello -p ${PROD_PORT}:8086 hello-world-prod
                '''
            }
        }
    }

    post {
        always {
            echo "Build finished"
        }
        failure {
            echo "Test failed â€” not deploying to production"
        }
    }
}
